name: Deploy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linter
        run: npm run lint
        
      - name: Run tests
        run: npm run test
        
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Run Database Migrations
        run: node scripts/migrate-db.js
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Discord Notification
        uses: rjstone/discord-webhook-notify@v1
        if: always()
        with:
          severity: info
          details: Deployment ${{ job.status == 'success' && 'Succeeded' || 'Failed' }}!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          
  monitoring:
    name: Post-Deployment Monitoring
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      - name: Check site availability
        uses: jtalk/url-health-check-action@v3
        with:
          url: ${{ secrets.PRODUCTION_URL }}
          follow-redirect: true
          max-attempts: 3
          retry-delay: 5s
          
      - name: Run Lighthouse Test
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: ${{ secrets.PRODUCTION_URL }}
          uploadArtifacts: true
          temporaryPublicStorage: true