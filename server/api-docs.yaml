openapi: 3.0.0
info:
  title: Buckalew Financial Services API
  version: 1.0.0
  description: API documentation for Buckalew Financial Services

servers:
  - url: https://api.buckalewfinancial.com/api/v1
    description: Production server
  - url: http://localhost:5000/api/v1
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [client, advisor, admin]

    FinancialProfile:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        riskTolerance:
          type: string
          enum: [conservative, moderate, aggressive]
        investmentGoals:
          type: array
          items:
            type: string
        monthlyIncome:
          type: number
        monthlyExpenses:
          type: number

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        201:
          description: User successfully registered
        400:
          description: Invalid input
        409:
          description: Email already exists

  /auth/login:
    post:
      summary: User login
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refreshToken:
                    type: string
        401:
          description: Invalid credentials

  /financial/profile:
    get:
      summary: Get user's financial profile
      tags: [Financial]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Financial profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialProfile'
        401:
          description: Unauthorized
    
    put:
      summary: Update financial profile
      tags: [Financial]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinancialProfile'
      responses:
        200:
          description: Profile updated successfully
        401:
          description: Unauthorized

  /financial/investments:
    get:
      summary: Get investment portfolio
      tags: [Financial]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Investment portfolio retrieved
        401:
          description: Unauthorized

  /financial/planning/goals:
    get:
      summary: Get financial planning goals
      tags: [Financial Planning]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Financial goals retrieved
        401:
          description: Unauthorized
    
    post:
      summary: Create financial goal
      tags: [Financial Planning]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                goalType:
                  type: string
                  enum: [retirement, education, home, other]
                targetAmount:
                  type: number
                targetDate:
                  type: string
                  format: date
      responses:
        201:
          description: Goal created successfully
        401:
          description: Unauthorized

  /advisors/availability:
    get:
      summary: Get advisor availability
      tags: [Advisors]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Advisor availability retrieved
        401:
          description: Unauthorized

  /appointments:
    post:
      summary: Schedule appointment
      tags: [Appointments]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                advisorId:
                  type: string
                dateTime:
                  type: string
                  format: date-time
                type:
                  type: string
                  enum: [initial, followUp, review]
      responses:
        201:
          description: Appointment scheduled
        401:
          description: Unauthorized
        409:
          description: Time slot not available