datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model User {
  id                String    @id @default(cuid())
  email             String    @unique
  name              String?
  password          String
  role              UserRole  @default(CLIENT)
  
  // Add createdAt and updatedAt fields
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  // Relationships and other fields
  profile           Profile?
  accounts          Account[]
  investments       Investment[]
  transactions      Transaction[]
  
  // Indexes
  @@index([email])
  @@index([createdAt])
}

enum UserRole {
  ADMIN
  ADVISOR
  CLIENT
  GUEST
}

model Profile {
  id                String    @id @default(cuid())
  userId            String    @unique
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  phoneNumber       String?
  address           String?
  city              String?
  state             String?
  zip               String?
  dateOfBirth       DateTime?
  
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Account {
  id                String    @id @default(cuid())
  userId            String
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  accountNumber     String    @unique
  accountType       String
  balance           Decimal   @default(0)
  
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  investments       Investment[]
  transactions      Transaction[]
}

model Investment {
  id                String    @id @default(cuid())
  userId            String
  accountId         String
  
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  account           Account   @relation(fields: [accountId], references: [id], onDelete: Cascade)
  
  productName       String
  currentValue      Decimal
  purchaseDate      DateTime
  
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  transactions      Transaction[]
}

model Transaction {
  id                String    @id @default(cuid())
  userId            String
  accountId         String
  investmentId      String?
  
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  account           Account   @relation(fields: [accountId], references: [id], onDelete: Cascade)
  investment        Investment? @relation(fields: [investmentId], references: [id], onDelete: SetNull)
  
  type              String
  amount            Decimal
  description       String?
  date              DateTime  @default(now())
  
  createdAt         DateTime  @default(now())
}
